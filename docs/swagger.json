{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Users app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of users app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://example.com/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Operations about users."
    },
    {
      "name": "Auth",
      "description": "Auth operations"
    },
    {
      "name": "Water",
      "description": "Operations about water records."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "description": "Creates a new user account and returns a success message.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "User registration data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/register"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registered a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a new user!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/register"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login to the account",
        "operationId": "loginUser",
        "description": "Logs in a user and returns an authentication token.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "User login data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "token"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in a user!"
                    },
                    "token": {
                      "type": "string",
                      "example": "bseDlf/Chq0dMG6c6o194qTqA6KaFeMMt6lJZOhp"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401-auth"
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout from the account",
        "operationId": "logoutUser",
        "description": "Logs out the user from the account.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Logged out successfully. No content is returned."
          },
          "400": {
            "description": "Invalid session ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid session ID"
                    },
                    "data": {
                      "type": "object"
                    },
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh access token",
        "operationId": "refreshUserSession",
        "description": "Refresh the user's access token using a valid refresh token.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully refreshed a session!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "Newly issued access token",
                          "example": "newRandomBase64AccessToken=="
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Add a new water record",
        "operationId": "waterRecord",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "time",
                  "volume"
                ],
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of the water record",
                    "example": "2025-03-08"
                  },
                  "volume": {
                    "type": "number",
                    "description": "Volume of water (in ml)",
                    "example": 1.5
                  },
                  "time": {
                    "type": "string",
                    "format": "time",
                    "description": "Time of the water record",
                    "example": "10:30"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Water consumption record added successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Water consumption record added successfully!"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404-water"
          }
        }
      }
    },
    "/water/{id}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Update a water record",
        "operationId": "updateWaterRecord",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the water record to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of the water record",
                    "example": "2025-03-08"
                  },
                  "time": {
                    "type": "string",
                    "format": "time",
                    "description": "Time of the water record",
                    "example": "12:00"
                  },
                  "volume": {
                    "type": "number",
                    "description": "Volume of water (in ml)",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated water record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated water record!"
                    },
                    "data": {
                      "type": "object"
                    }
                  },
                  "$ref": "#/components/schemas/waterRecord"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400-water"
          },
          "404": {
            "$ref": "#/components/responses/404-water"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "register": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "JTestemail@gmail.com"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "example": "password12345!"
          },
          "gender": {
            "description": "User's gender",
            "type": "string",
            "example": "woman"
          },
          "weight": {
            "description": "User's weight",
            "type": "integer",
            "example": 0
          },
          "dailySportTime": {
            "description": "User's daily sport time",
            "type": "integer",
            "example": 0
          },
          "dailyNorm": {
            "description": "User's daily norm",
            "type": "integer",
            "example": 1500
          },
          "avatar": {
            "description": "User's avatar URL",
            "type": "string",
            "example": "https://res.cloudinary.com/diee7l1on/image/upload/v1741187439/default-avatar-profile-icon-social-media-user-image-gray-avatar-icon-blank-profile-silhouette-vector-illustration_561158-3467_bvqe8k.avif"
          },
          "isVerified": {
            "description": "User's verification status",
            "type": "boolean",
            "example": false
          },
          "_id": {
            "description": "User's ID",
            "type": "string",
            "example": "67cc5bb27a2222d660c179f9"
          },
          "createdAt": {
            "description": "User's creation date",
            "type": "string",
            "format": "date-time",
            "example": "2025-03-08T15:01:06.308Z"
          },
          "updatedAt": {
            "description": "User's last update date",
            "type": "string",
            "format": "date-time",
            "example": "2025-03-08T15:01:06.308Z"
          }
        }
      },
      "login": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "testemail@gmail.com"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "example": "password12345!"
          }
        }
      },
      "waterRecord": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Water record ID"
          },
          "userId": {
            "type": "string",
            "description": "User ID"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date of the water record"
          },
          "time": {
            "type": "string",
            "description": "Time of the water record"
          },
          "volume": {
            "type": "number",
            "description": "Volume of water (in ml)"
          }
        },
        "required": [
          "_id",
          "userId",
          "date",
          "time",
          "volume"
        ]
      }
    },
    "responses": {
      "400": {
        "description": "Bad request error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "details": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid request parameters. Please check your input and try again."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "details": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid or expired access token. Please log in again."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401-auth": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404-water": {
        "description": "Not found error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "details": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Water record not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400-water": {
        "description": "Bad request error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "details": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Date must be a valid date format"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}